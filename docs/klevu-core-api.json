{
	"id": 0,
	"name": "@klevu/core",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 165,
			"name": "FilterOrder",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 166,
					"name": "Frequency",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 11,
							"character": 2
						}
					],
					"defaultValue": "\"FREQ\""
				},
				{
					"id": 167,
					"name": "Index",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 12,
							"character": 2
						}
					],
					"defaultValue": "\"INDEX\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						166,
						167
					]
				}
			],
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 10,
					"character": 12
				}
			]
		},
		{
			"id": 531,
			"name": "KlevuDomEvents",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"comment": {
				"shortText": "Global custom document events that @klevu/core sends"
			},
			"children": [
				{
					"id": 533,
					"name": "FilterSelectionUpdate",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "When filter manager selection has changed"
					},
					"sources": [
						{
							"fileName": "events/customEvents.ts",
							"line": 13,
							"character": 2
						}
					],
					"defaultValue": "\"klevu-filter-selection-updates\""
				},
				{
					"id": 532,
					"name": "LastSearchUpdate",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "When list of last searched terms update"
					},
					"sources": [
						{
							"fileName": "events/customEvents.ts",
							"line": 8,
							"character": 2
						}
					],
					"defaultValue": "\"klevu-last-search-update\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						533,
						532
					]
				}
			],
			"sources": [
				{
					"fileName": "events/customEvents.ts",
					"line": 4,
					"character": 12
				}
			]
		},
		{
			"id": 178,
			"name": "KlevuSearchPreference",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 197,
					"name": "debugQuery",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "Use this flag to include additional information about the query execution.\nThis information is populated in the meta object of the response.",
						"text": "Please note that it is not recommended to enable this flag in your\nProduction environment, as performance will be impacted.\n"
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 159,
							"character": 2
						}
					],
					"defaultValue": "\"debugQuery\""
				},
				{
					"id": 185,
					"name": "disableFuzzyMatch",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "\tThis flag can be used in conjunction with the typeOfSearch 'DEFAULT' to\n\tdisable the FUZZY_AND and FUZZY_OR search types from being attempted."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 65,
							"character": 2
						}
					],
					"defaultValue": "\"disableFuzzyMatch\""
				},
				{
					"id": 187,
					"name": "disableORSearch",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "\tThis flag can be used in conjunction with the typeOfSearch 'DEFAULT' to\n\tdisable the WILDCARD_OR and FUZZY_OR search types from being attempted."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 76,
							"character": 2
						}
					],
					"defaultValue": "\"disableORSearch\""
				},
				{
					"id": 181,
					"name": "disableStockSorting",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "\tThis can be used in conjunction with showOutOfStockProducts. If your store\n\tis configured to display out of stock products, they will be displayed at\n\tthe very end of the search results after all in stock products have been\n\tdisplayed. By using this flag you can disable this logic, and cause all\n\tproducts to be ranked in an order that disregards their stock status."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 43,
							"character": 2
						}
					],
					"defaultValue": "\"disableStockSorting\""
				},
				{
					"id": 186,
					"name": "disableWildcard",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "\tThis flag can be used in conjunction with the typeOfSearch 'DEFAULT' to\n\tdisable the WILDCARD_AND and WILDCARD_OR search types from being\n\tattempted."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 71,
							"character": 2
						}
					],
					"defaultValue": "\"disableWildcard\""
				},
				{
					"id": 190,
					"name": "disableWordShingles",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "\tFor a query longer than one word, all the possible bigrams and trigrams\n\t(i.e. formed out of query terms) are looked up in records and the ones\n\thaving one or more of them are boosted higher up in the search results.\n\tYou can use this flag to disable such boosting."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 104,
							"character": 2
						}
					],
					"defaultValue": "\"disableWordShingles\""
				},
				{
					"id": 192,
					"name": "enableBoostingOriginalTermsInSynonyms",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "\tBy default, synonyms are treated equally to their query term. Should you\n\twish to give higher priority to the actual terms your customer entered in\n\tthe query over their synonyms, please include this flag in your search\n\tpreferences."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 126,
							"character": 2
						}
					],
					"defaultValue": "\"enableBoostingOriginalTermsInSynonyms\""
				},
				{
					"id": 196,
					"name": "enableScores",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "Include the score information with the response fields: score,\nklevu_manual_boosting, klevu_bulk_boosting and klevu_selflearning_boosting."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 151,
							"character": 2
						}
					],
					"defaultValue": "\"enableScores\""
				},
				{
					"id": 183,
					"name": "excludeIds",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "\tUse this flag to disable the searching of record IDs."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 53,
							"character": 2
						}
					],
					"defaultValue": "\"excludeIds\""
				},
				{
					"id": 180,
					"name": "hideOutOfStockProducts",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "\tWhether or not your store should include 'Out of Stock' products in search\n\tresults by default can be configured within the Klevu Merchant Centre.\n\tHowever, if you would like to override this for a particular query, please\n\tinclude one of these flags."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 35,
							"character": 2
						}
					],
					"defaultValue": "\"hideOutOfStockProducts\""
				},
				{
					"id": 195,
					"name": "includeCategoryFilterInCatNav",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "When the typeOfRequest is 'CATNAV', the filter for 'Category' is\nautomatically excluded since you are already within the context of a\ncategory. Use this flag to override this logic and return the category\nfilters even for CatNav requests."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 146,
							"character": 2
						}
					],
					"defaultValue": "\"includeCategoryFilterInCatNav\""
				},
				{
					"id": 184,
					"name": "includeDescription",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": ", excludeDescription Whether or not a record's 'description' is considered\nfor search results can be configured by Klevu Support on a store by store\nbasis, however if you would like to override this for a particular query,\nplease include one of these flags."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 60,
							"character": 2
						}
					],
					"defaultValue": "\"includeDescription\""
				},
				{
					"id": 182,
					"name": "includeStopwords",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "\tBy default, functional words such as prepositions, pronouns, articles,\n\tetc. are excluded from searches. Add this flag to include these stopwords\n\tin your search."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 49,
							"character": 2
						}
					],
					"defaultValue": "\"includeStopwords\""
				},
				{
					"id": 188,
					"name": "partialMatch",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "Enable partial match for the last word of a query, where the last word\nsearched can be a substring of any other word found in a record. This can\nbe useful for non-English languages.",
						"text": "For example let's say a product has the name \"rödvinsglas\" (red wine\nglass). If searching for \"högt glas\" (tall glass) it may not match since\nthe record has no words starting with 'glas'. By providing this flag, the\nsearch would become \"högt *glas*\" meaning it would match the record since\nit contains a word which ends with 'glas'.\n\n"
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 89,
							"character": 2
						}
					],
					"defaultValue": "\"partialMatch\""
				},
				{
					"id": 189,
					"name": "partialMatchForAllWords",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "\tSimilar to partialMatch, but for all words rather than just the last. In\n\tthe same \"rödvinsglas\" example, a search for \"högt glas\" would become\n\t\"*högt* *glas*\", so any records containing words containing 'högt' or\n\t'glas' would result in a match."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 97,
							"character": 2
						}
					],
					"defaultValue": "\"partialMatchForAllWords\""
				},
				{
					"id": 191,
					"name": "searchCompoundsAsAndQuery",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "When a compound word is searched for, i.e. two or more individual words\njoined together as one word, Klevu automatically disjoints them if the\nde-compounding feature is enabled for your store.",
						"text": "For example, a search for \"fairylights\" would be treated as \"fairy lights\",\nbut with the added condition that those words must appear within 5 words of\neach other in a matching record.\n\nIf you would prefer that the words \"fairy\" and \"light\" could be found\nanywhere within the record, not necessarily near one another, then please\ninclude this flag.\n"
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 118,
							"character": 2
						}
					],
					"defaultValue": "\"searchCompoundsAsAndQuery\""
				},
				{
					"id": 193,
					"name": "showDisabledFacets",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "It is possible to configure which facets or filters should be enabled or\ndisabled within the Klevu Merchant Centre. By including this flag, all\nfacets will be returned regardless of whether they have been disabled in\nthe KMC."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 133,
							"character": 2
						}
					],
					"defaultValue": "\"showDisabledFacets\""
				},
				{
					"id": 194,
					"name": "showFiltersWithSmallCount",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "By default some filters are excluded from the results if they only have a\nsmall number of results. Please use this flag to override this logic and\ninclude all filters in the response."
					},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 139,
							"character": 2
						}
					],
					"defaultValue": "\"showFiltersWithSmallCount\""
				},
				{
					"id": 179,
					"name": "showOutOfStockProducts",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 28,
							"character": 2
						}
					],
					"defaultValue": "\"showOutOfStockProducts\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						197,
						185,
						187,
						181,
						186,
						190,
						192,
						196,
						183,
						180,
						195,
						184,
						182,
						188,
						189,
						191,
						193,
						194,
						179
					]
				}
			],
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 27,
					"character": 12
				}
			]
		},
		{
			"id": 168,
			"name": "KlevuSorting",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 172,
					"name": "NameAsc",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 19,
							"character": 2
						}
					],
					"defaultValue": "\"NAME_ASC\""
				},
				{
					"id": 173,
					"name": "NameDesc",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 20,
							"character": 2
						}
					],
					"defaultValue": "\"NAME_DESC\""
				},
				{
					"id": 176,
					"name": "NewArrivalAsc",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 23,
							"character": 2
						}
					],
					"defaultValue": "\"NEW_ARRIVAL_ASC\""
				},
				{
					"id": 177,
					"name": "NewArrivalDesc",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 24,
							"character": 2
						}
					],
					"defaultValue": "\"NEW_ARRIVAL_DESC\""
				},
				{
					"id": 170,
					"name": "PriceAsc",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 17,
							"character": 2
						}
					],
					"defaultValue": "\"PRICE_ASC\""
				},
				{
					"id": 171,
					"name": "PriceDesc",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 18,
							"character": 2
						}
					],
					"defaultValue": "\"PRICE_DESC\""
				},
				{
					"id": 174,
					"name": "RatingAsc",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 21,
							"character": 2
						}
					],
					"defaultValue": "\"RATING_ASC\""
				},
				{
					"id": 175,
					"name": "RatingDesc",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 22,
							"character": 2
						}
					],
					"defaultValue": "\"RATING_DESC\""
				},
				{
					"id": 169,
					"name": "Relevance",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 16,
							"character": 2
						}
					],
					"defaultValue": "\"RELEVANCE\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						172,
						173,
						176,
						177,
						170,
						171,
						174,
						175,
						169
					]
				}
			],
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 15,
					"character": 12
				}
			]
		},
		{
			"id": 12,
			"name": "KlevuTypeOfRecord",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 15,
					"name": "Category",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 4,
							"character": 2
						}
					],
					"defaultValue": "\"KLEVU_CATEGORY\""
				},
				{
					"id": 14,
					"name": "Cms",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 3,
							"character": 2
						}
					],
					"defaultValue": "\"KLEVU_CMS\""
				},
				{
					"id": 13,
					"name": "Product",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 2,
							"character": 2
						}
					],
					"defaultValue": "\"KLEVU_PRODUCT\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						15,
						14,
						13
					]
				}
			],
			"sources": [
				{
					"fileName": "model.ts",
					"line": 1,
					"character": 12
				}
			]
		},
		{
			"id": 62,
			"name": "KlevuTypeOfRequest",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 70,
					"name": "AlsoBought",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 171,
							"character": 2
						}
					],
					"defaultValue": "\"RECS_ALSO_BOUGHT\""
				},
				{
					"id": 69,
					"name": "AlsoViewed",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 170,
							"character": 2
						}
					],
					"defaultValue": "\"RECS_ALSO_VIEWED\""
				},
				{
					"id": 65,
					"name": "CategoryNavigation",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 166,
							"character": 2
						}
					],
					"defaultValue": "\"CATNAV\""
				},
				{
					"id": 66,
					"name": "NewArrivals",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 167,
							"character": 2
						}
					],
					"defaultValue": "\"RECS_NEW_ARRIVALS\""
				},
				{
					"id": 63,
					"name": "Search",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 164,
							"character": 2
						}
					],
					"defaultValue": "\"SEARCH\""
				},
				{
					"id": 67,
					"name": "SimilarProducts",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 168,
							"character": 2
						}
					],
					"defaultValue": "\"RECS_SIMILAR\""
				},
				{
					"id": 64,
					"name": "Suggestion",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 165,
							"character": 2
						}
					],
					"defaultValue": "\"AUTO_SUGGESTIONS\""
				},
				{
					"id": 68,
					"name": "Trending",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 169,
							"character": 2
						}
					],
					"defaultValue": "\"RECS_TRENDING\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						70,
						69,
						65,
						66,
						63,
						67,
						64,
						68
					]
				}
			],
			"sources": [
				{
					"fileName": "model.ts",
					"line": 163,
					"character": 12
				}
			]
		},
		{
			"id": 71,
			"name": "KlevuTypeOfSearch",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 77,
					"name": "And",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "All of the exact words of a query must be found in a record for it to be\nincluded in the results. No fuzziness or wildcards are included.",
						"text": "For example a search for \"hooded jacket\" will only return records which\ncontain the exact terms \"hooded\" AND \"jacket\".\n"
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 237,
							"character": 2
						}
					],
					"defaultValue": "\"AND\""
				},
				{
					"id": 72,
					"name": "Default",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "When this value is specified, Klevu will go through a number of attempts to\nfind matching records. The first type attempted is WILDCARD_AND. If there\naren't any results found, Klevu tries to find products with the FUZZY_AND\nquery type.",
						"text": "As long as no matches are found, Klevu will continue to fire different query\ntypes in the following order:\n\nWILDCARD_AND\nFUZZY_AND\nWILDCARD_OR\nFUZZY_OR\nNote that when a search term only contains a single word, or more than six\nwords, the 'OR' query types will be skipped.\n"
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 191,
							"character": 2
						}
					],
					"defaultValue": "\"DEFAULT\""
				},
				{
					"id": 74,
					"name": "FuzzyAnd",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "This is the same as a WILDCARD_AND query, however a certain amount of\n'fuzziness' is allowed to account for spelling mistakes.",
						"text": "For example, if the searched query contains spelling mistakes like \"hooder\njakcet\", Klevu will still be able to match any records containing the words\n\"hooded\" AND \"jacket\".\n"
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 210,
							"character": 2
						}
					],
					"defaultValue": "\"FUZZY_AND\""
				},
				{
					"id": 76,
					"name": "FuzzyOr",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "This is the same as a WILDCARD_OR query, however a certain amount of\n'fuzziness' is allowed to account for spelling mistakes.",
						"text": "For example, if the searched query contains spelling mistakes like \"hooder\njakcet\", Klevu will still be able to match any records containing the words\n\"hooded\" OR \"jacket\".\n"
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 229,
							"character": 2
						}
					],
					"defaultValue": "\"FUZZY_OR\""
				},
				{
					"id": 78,
					"name": "Or",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "At least one exact word of a query must be found in a record for it to be\nincluded in a results. No fuzziness or wildcards are included.",
						"text": "For example a search for \"hooded jacket\" will only return records which\ncontain one of the exact terms \"hooded\" OR \"jacket\".\n"
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 245,
							"character": 2
						}
					],
					"defaultValue": "\"OR\""
				},
				{
					"id": 73,
					"name": "WildcardAnd",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "This is an 'AND' query so all words of the query must be found somewhere in a\nrecord for it to be included in the results. The last word of the query will\nhave a wildcard suffix appended.",
						"text": "For example, if the searched query is \"hooded jacket\", this will become\n\"hooded jacket*\", ie. Klevu will try to find records containing the word\n\"hooded\" AND any words beginning with \"jacket\".\n"
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 201,
							"character": 2
						}
					],
					"defaultValue": "\"WILDCARD_AND\""
				},
				{
					"id": 75,
					"name": "WildcardOr",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "This is an 'OR' query so at least one of the words in the query must be found\nsomewhere in a record for it to be included in the results. The last word of\nthe query will have a wildcard suffix appended.",
						"text": "For example, if the searched query is \"hooded jacket\", this will become\n\"hooded jacket*\", ie. Klevu will try to find records containing the word\n\"hooded\" OR any words beginning with \"jacket\".\n"
					},
					"sources": [
						{
							"fileName": "model.ts",
							"line": 220,
							"character": 2
						}
					],
					"defaultValue": "\"WILDCARD_OR\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						77,
						72,
						74,
						76,
						78,
						73,
						75
					]
				}
			],
			"sources": [
				{
					"fileName": "model.ts",
					"line": 174,
					"character": 12
				}
			]
		},
		{
			"id": 547,
			"name": "FilterManager",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 548,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 549,
							"name": "new FilterManager",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 547,
								"name": "FilterManager"
							}
						}
					]
				},
				{
					"id": 550,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "store/filterManager.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 364,
							"name": "FilterResultOptions"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 551,
					"name": "sliders",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "store/filterManager.ts",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 373,
							"name": "FilterResultSlider"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 563,
					"name": "currentSelection",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "store/filterManager.ts",
							"line": 109,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 564,
							"name": "currentSelection",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 565,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 552,
					"name": "initFromListFilters",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "store/filterManager.ts",
							"line": 14,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 553,
							"name": "initFromListFilters",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 554,
									"name": "filters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 364,
													"name": "FilterResultOptions"
												},
												{
													"type": "reference",
													"id": 373,
													"name": "FilterResultSlider"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 555,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "store/filterManager.ts",
							"line": 29,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 556,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 561,
					"name": "toApplyFilters",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "store/filterManager.ts",
							"line": 76,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 562,
							"name": "toApplyFilters",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 464,
									"name": "ApplyFilter"
								}
							}
						}
					]
				},
				{
					"id": 557,
					"name": "toggleOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "store/filterManager.ts",
							"line": 43,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 558,
							"name": "toggleOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Function to select filters in filter manager",
								"text": "Sends a Dom event on change\n"
							},
							"parameters": [
								{
									"id": 559,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Key of option"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 560,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Name of value\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						548
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						550,
						551
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						563,
						552,
						555,
						561,
						557
					]
				}
			],
			"sources": [
				{
					"fileName": "store/filterManager.ts",
					"line": 10,
					"character": 13
				}
			]
		},
		{
			"id": 1,
			"name": "KlevuConfig",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 10,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 11,
							"name": "new KlevuConfig",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "KlevuConfig"
							}
						}
					]
				},
				{
					"id": 2,
					"name": "apiKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 27,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4,
					"name": "cacheMaxTTL",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 29,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "600000"
				},
				{
					"id": 5,
					"name": "eventsApiV1Url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 30,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"https://stats.ksearchnet.com/analytics/\""
				},
				{
					"id": 6,
					"name": "eventsApiV2Url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 31,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"https://stats.ksearchnet.com/analytics/collect\""
				},
				{
					"id": 3,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 28,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 7,
					"name": "init",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 38,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 8,
							"name": "init",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Must be called once per application to initialize Klevu"
							},
							"parameters": [
								{
									"id": 9,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "reference",
										"name": "KlevuConfiguration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						10
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2,
						4,
						5,
						6,
						3
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						7
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 26,
					"character": 13
				}
			]
		},
		{
			"id": 507,
			"name": "KlevuEvents",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 529,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 530,
							"name": "new KlevuEvents",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 507,
								"name": "KlevuEvents"
							}
						}
					]
				},
				{
					"id": 508,
					"name": "buy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "events/klevuEvents.ts",
							"line": 22,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 509,
							"name": "buy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Tell Klevu what products where bought by the user"
							},
							"parameters": [
								{
									"id": 510,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Items user bought\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 511,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 512,
														"name": "amount",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "events/klevuEvents.ts",
																"line": 24,
																"character": 6
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 513,
														"name": "product",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "events/klevuEvents.ts",
																"line": 25,
																"character": 6
															}
														],
														"type": {
															"type": "reference",
															"id": 16,
															"name": "KlevuRecord"
														}
													},
													{
														"id": 514,
														"name": "variantId",
														"kind": 1024,
														"kindString": "Property",
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "events/klevuEvents.ts",
																"line": 26,
																"character": 6
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"kind": 1024,
														"children": [
															512,
															513,
															514
														]
													}
												]
											}
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 519,
					"name": "productClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "events/klevuEvents.ts",
							"line": 54,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 520,
							"name": "productClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "When product is clicked. Do not use this for recommendations"
							},
							"parameters": [
								{
									"id": 521,
									"name": "product",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "reference",
										"id": 16,
										"name": "KlevuRecord"
									}
								},
								{
									"id": 522,
									"name": "searchTerm",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 523,
									"name": "variantId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 515,
					"name": "recommendationClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "events/klevuEvents.ts",
							"line": 44,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 516,
							"name": "recommendationClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 517,
					"name": "recommendationView",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "events/klevuEvents.ts",
							"line": 46,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 518,
							"name": "recommendationView",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 524,
					"name": "search",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "events/klevuEvents.ts",
							"line": 81,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 525,
							"name": "search",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "What user has last searched. This is important for Klevu to function\nproperly. `search()` query automatically sends this event. Use\n`doNotSendEvent` option in search to disable it."
							},
							"parameters": [
								{
									"id": 526,
									"name": "term",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "What was searched"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 527,
									"name": "totalResults",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Total number of results (can be found in result meta)"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 528,
									"name": "typeOfSearch",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Type of search used (can be found in result meta)\n"
									},
									"type": {
										"type": "reference",
										"id": 71,
										"name": "KlevuTypeOfSearch"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						529
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						508,
						519,
						515,
						517,
						524
					]
				}
			],
			"sources": [
				{
					"fileName": "events/klevuEvents.ts",
					"line": 16,
					"character": 13
				}
			]
		},
		{
			"id": 350,
			"name": "AllRecordQueries",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 595,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 243,
						"name": "KlevuBaseQuery"
					},
					{
						"type": "reference",
						"id": 295,
						"name": "KlevuSimilarProcutsQuery"
					},
					{
						"type": "reference",
						"id": 308,
						"name": "KlevuTrendingProductsQuery"
					},
					{
						"type": "reference",
						"id": 327,
						"name": "KlevuAlsoViewedQuery"
					}
				]
			}
		},
		{
			"id": 464,
			"name": "ApplyFilter",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "modifiers/applyFilter/applyFilter.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 465,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 466,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "modifiers/applyFilter/applyFilter.ts",
									"line": 9,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 468,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "modifiers/applyFilter/applyFilter.ts",
									"line": 11,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 469,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 470,
											"name": "singleSelect",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "modifiers/applyFilter/applyFilter.ts",
													"line": 12,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												470
											]
										}
									],
									"sources": [
										{
											"fileName": "modifiers/applyFilter/applyFilter.ts",
											"line": 11,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 467,
							"name": "values",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "modifiers/applyFilter/applyFilter.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								466,
								468,
								467
							]
						}
					],
					"sources": [
						{
							"fileName": "modifiers/applyFilter/applyFilter.ts",
							"line": 8,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 462,
			"name": "ApplyFilterOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "modifiers/applyFilter/applyFilter.ts",
					"line": 4,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 463,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "modifiers/applyFilter/applyFilter.ts",
							"line": 4,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 364,
			"name": "FilterResultOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 627,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "FilterResult"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 365,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 367,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 629,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 368,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 371,
														"name": "count",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "connection/queryModels.ts",
																"line": 632,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 369,
														"name": "name",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "connection/queryModels.ts",
																"line": 630,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 372,
														"name": "selected",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "connection/queryModels.ts",
																"line": 633,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "boolean"
														}
													},
													{
														"id": 370,
														"name": "value",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "connection/queryModels.ts",
																"line": 631,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"kind": 1024,
														"children": [
															371,
															369,
															372,
															370
														]
													}
												],
												"sources": [
													{
														"fileName": "connection/queryModels.ts",
														"line": 629,
														"character": 17
													}
												]
											}
										}
									}
								},
								{
									"id": 366,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 628,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"name": "FilterType.Options"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										367,
										366
									]
								}
							],
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 627,
									"character": 49
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 373,
			"name": "FilterResultSlider",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 643,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "FilterResult"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 374,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 379,
									"name": "end",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 648,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 377,
									"name": "max",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 646,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 376,
									"name": "min",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 645,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 378,
									"name": "start",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 647,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 375,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 644,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"name": "FilterType.Slider"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										379,
										377,
										376,
										378,
										375
									]
								}
							],
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 643,
									"character": 48
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 340,
			"name": "KlevuAlsoBoughtQuery",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 582,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 243,
						"name": "KlevuBaseQuery"
					},
					{
						"type": "reference",
						"id": 327,
						"name": "KlevuAlsoViewedQuery"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 341,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 342,
									"name": "typeOfRequest",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 584,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"id": 70,
										"name": "KlevuTypeOfRequest.AlsoBought"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										342
									]
								}
							],
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 583,
									"character": 25
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 327,
			"name": "KlevuAlsoViewedQuery",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 570,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 243,
						"name": "KlevuBaseQuery"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 328,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 330,
									"name": "settings",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 572,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 331,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 332,
													"name": "context",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "connection/queryModels.ts",
															"line": 573,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 333,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 334,
																	"name": "recentObjects",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "connection/queryModels.ts",
																			"line": 574,
																			"character": 6
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 335,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 337,
																						"name": "records",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "connection/queryModels.ts",
																								"line": 576,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "reflection",
																								"declaration": {
																									"id": 338,
																									"name": "__type",
																									"kind": 65536,
																									"kindString": "Type literal",
																									"flags": {},
																									"children": [
																										{
																											"id": 339,
																											"name": "id",
																											"kind": 1024,
																											"kindString": "Property",
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "connection/queryModels.ts",
																													"line": 576,
																													"character": 25
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"kind": 1024,
																											"children": [
																												339
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "connection/queryModels.ts",
																											"line": 576,
																											"character": 23
																										}
																									]
																								}
																							}
																						}
																					},
																					{
																						"id": 336,
																						"name": "typeOfRecord",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "connection/queryModels.ts",
																								"line": 575,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"id": 12,
																							"name": "KlevuTypeOfRecord"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							337,
																							336
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "connection/queryModels.ts",
																						"line": 574,
																						"character": 27
																					}
																				]
																			}
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		334
																	]
																}
															],
															"sources": [
																{
																	"fileName": "connection/queryModels.ts",
																	"line": 573,
																	"character": 14
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														332
													]
												}
											],
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 572,
													"character": 13
												}
											]
										}
									}
								},
								{
									"id": 329,
									"name": "typeOfRequest",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 571,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"id": 69,
										"name": "KlevuTypeOfRequest.AlsoViewed"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										330,
										329
									]
								}
							],
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 570,
									"character": 52
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 380,
			"name": "KlevuApiResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 710,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 381,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 382,
							"name": "meta",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 711,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 383,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 384,
											"name": "qTime",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 712,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 385,
											"name": "responseCode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 713,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												384,
												385
											]
										}
									],
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 711,
											"character": 8
										}
									]
								}
							}
						},
						{
							"id": 387,
							"name": "queryResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 716,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "QueryResult"
								}
							}
						},
						{
							"id": 386,
							"name": "suggestionResults",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 715,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 358,
									"name": "SuggestionResult"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								382,
								387,
								386
							]
						}
					],
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 710,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 284,
			"name": "KlevuApplyFilter",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 517,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 285,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 286,
							"name": "applyFilters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 518,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 287,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 288,
											"name": "filters",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 519,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 289,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"children": [
															{
																"id": 290,
																"name": "key",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"sources": [
																	{
																		"fileName": "connection/queryModels.ts",
																		"line": 520,
																		"character": 6
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 292,
																"name": "settings",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"sources": [
																	{
																		"fileName": "connection/queryModels.ts",
																		"line": 522,
																		"character": 6
																	}
																],
																"type": {
																	"type": "reflection",
																	"declaration": {
																		"id": 293,
																		"name": "__type",
																		"kind": 65536,
																		"kindString": "Type literal",
																		"flags": {},
																		"children": [
																			{
																				"id": 294,
																				"name": "singleSelect",
																				"kind": 1024,
																				"kindString": "Property",
																				"flags": {},
																				"sources": [
																					{
																						"fileName": "connection/queryModels.ts",
																						"line": 523,
																						"character": 8
																					}
																				],
																				"type": {
																					"type": "intrinsic",
																					"name": "boolean"
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Properties",
																				"kind": 1024,
																				"children": [
																					294
																				]
																			}
																		],
																		"sources": [
																			{
																				"fileName": "connection/queryModels.ts",
																				"line": 522,
																				"character": 16
																			}
																		]
																	}
																}
															},
															{
																"id": 291,
																"name": "values",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"sources": [
																	{
																		"fileName": "connection/queryModels.ts",
																		"line": 521,
																		"character": 6
																	}
																],
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "array",
																			"elementType": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"type": "tuple",
																			"elements": [
																				{
																					"type": "intrinsic",
																					"name": "number"
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	]
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"kind": 1024,
																"children": [
																	290,
																	292,
																	291
																]
															}
														],
														"sources": [
															{
																"fileName": "connection/queryModels.ts",
																"line": 519,
																"character": 19
															}
														]
													}
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												288
											]
										}
									],
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 518,
											"character": 17
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								286
							]
						}
					],
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 517,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 243,
			"name": "KlevuBaseQuery",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 360,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 244,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 251,
							"name": "boost",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If you have already built up a profile of your customer and would like to\nuse what you know about them to promote certain results, you can use the\nboost object within each record query.",
								"text": "There are three ways the records can be boosted:\n\nfilter conditions keywords or phrases IDs of specific records For example\nlet's say you have an online store with an area where customers can log in.\n\nFrom your stores purchase history, you know that one customer is\nparticularly interested in the brand 'KKE'.\n\nFrom your analytics data, you also know the same customer also looked at\nthe product detail page of the product with ID: '31366487375934' many\ntimes.\n\nFinally, you have an area where customers can specify keywords of their\ninterests, and this customer wrote 'comfortable'.\n\nAs a merchant with all of this information available, you can build up a\nprofile about this customer. The sample to the right shows how you would\nconvey this information to Klevu during a search.\n\nTo find out more about how boosting works with your existing merchandising\nrules, please read this article on How [Personalisation\nWorks](https://help.klevu.com/support/solutions/articles/5000871357-how-does-it-work-).\n"
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 396,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 252,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 253,
											"name": "filters",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Specify filter values to apply a boosting score to. They key is the\nunique identifier of the attribute, eg. Color. Each of the values\nrepresents the value of that filter to boost, eg. red or blue."
											},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 402,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 254,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"children": [
															{
																"id": 255,
																"name": "key",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"sources": [
																	{
																		"fileName": "connection/queryModels.ts",
																		"line": 403,
																		"character": 6
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 256,
																"name": "values",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"sources": [
																	{
																		"fileName": "connection/queryModels.ts",
																		"line": 404,
																		"character": 6
																	}
																],
																"type": {
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															},
															{
																"id": 257,
																"name": "weight",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"comment": {
																	"shortText": "The boosting value to be applied, a decimal between 0 - 999. Please\nspecify values above 1 for boosting the records up the rankings, and a\nvalue of 0 to 1 to de-boost records down the rankings."
																},
																"sources": [
																	{
																		"fileName": "connection/queryModels.ts",
																		"line": 410,
																		"character": 6
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"kind": 1024,
																"children": [
																	255,
																	256,
																	257
																]
															}
														],
														"sources": [
															{
																"fileName": "connection/queryModels.ts",
																"line": 402,
																"character": 20
															}
														]
													}
												}
											}
										},
										{
											"id": 258,
											"name": "keywords",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Specify keywords or phrases to apply a boosting score to, for example\n\"comfortable\"."
											},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 416,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 259,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"children": [
															{
																"id": 260,
																"name": "phrase",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"comment": {
																	"shortText": "keyword"
																},
																"sources": [
																	{
																		"fileName": "connection/queryModels.ts",
																		"line": 420,
																		"character": 6
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 261,
																"name": "weight",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"comment": {
																	"shortText": "The boosting value to be applied, a decimal between 0 - 999. Please\nspecify values above 1 for boosting the records up the rankings, and a\nvalue of 0 to 1 to de-boost records down the rankings."
																},
																"sources": [
																	{
																		"fileName": "connection/queryModels.ts",
																		"line": 426,
																		"character": 6
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"kind": 1024,
																"children": [
																	260,
																	261
																]
															}
														],
														"sources": [
															{
																"fileName": "connection/queryModels.ts",
																"line": 416,
																"character": 21
															}
														]
													}
												}
											}
										},
										{
											"id": 262,
											"name": "records",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "Specify the Klevu ID of any records to apply a boosting score to."
											},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 431,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 263,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"children": [
															{
																"id": 264,
																"name": "id",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"comment": {
																	"shortText": "Record id"
																},
																"sources": [
																	{
																		"fileName": "connection/queryModels.ts",
																		"line": 435,
																		"character": 6
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 265,
																"name": "weight",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"comment": {
																	"shortText": "The boosting value to be applied, a decimal between 0 - 999. Please\nspecify values above 1 for boosting the records up the rankings, and a\nvalue of 0 to 1 to de-boost records down the rankings."
																},
																"sources": [
																	{
																		"fileName": "connection/queryModels.ts",
																		"line": 441,
																		"character": 6
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"kind": 1024,
																"children": [
																	264,
																	265
																]
															}
														],
														"sources": [
															{
																"fileName": "connection/queryModels.ts",
																"line": 431,
																"character": 20
															}
														]
													}
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												253,
												258,
												262
											]
										}
									],
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 396,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 247,
							"name": "doNotSendEvent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 363,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 249,
							"name": "filters",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 365,
									"character": 2
								}
							],
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 271,
										"name": "KlevuListFilter"
									},
									{
										"type": "reference",
										"id": 284,
										"name": "KlevuApplyFilter"
									}
								]
							}
						},
						{
							"id": 245,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 361,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 248,
							"name": "isFallbackQuery",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 364,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 250,
							"name": "settings",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 366,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 205,
								"name": "KlevuBaseQuerySettings"
							}
						},
						{
							"id": 246,
							"name": "typeOfRequest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 362,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 62,
								"name": "KlevuTypeOfRequest"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								251,
								247,
								249,
								245,
								248,
								250,
								246
							]
						}
					],
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 360,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 205,
			"name": "KlevuBaseQuerySettings",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 185,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 206,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 235,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 332,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 236,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 237,
											"name": "recentObjects",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"tags": [
													{
														"tag": "todo:",
														"text": "Rewrite this doc. Describe how personalisation works\n\nUse this object to specify the records (e.g. products, categories,\netc.) that were recently interacted with by a customer.\n\nPlease only specify one recentObject object per record type, one for\nall KLEVU_PRODUCT entries, another for all KLEVU_CMS pages visited,\netc.\n\nEach recentObject object may contain multiple record objects (e.g. 5\nrecently viewed products). The most recently clicked record should be\nthe first element in the array.\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 347,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 238,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"children": [
															{
																"id": 240,
																"name": "records",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"comment": {
																	"shortText": "Id's of records"
																},
																"sources": [
																	{
																		"fileName": "connection/queryModels.ts",
																		"line": 355,
																		"character": 6
																	}
																],
																"type": {
																	"type": "array",
																	"elementType": {
																		"type": "reflection",
																		"declaration": {
																			"id": 241,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 242,
																					"name": "id",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "connection/queryModels.ts",
																							"line": 355,
																							"character": 23
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						242
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "connection/queryModels.ts",
																					"line": 355,
																					"character": 21
																				}
																			]
																		}
																	}
																}
															},
															{
																"id": 239,
																"name": "typeOfRecord",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"comment": {
																	"shortText": "Type of visited record"
																},
																"sources": [
																	{
																		"fileName": "connection/queryModels.ts",
																		"line": 351,
																		"character": 6
																	}
																],
																"type": {
																	"type": "reference",
																	"id": 12,
																	"name": "KlevuTypeOfRecord"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"kind": 1024,
																"children": [
																	240,
																	239
																]
															}
														],
														"sources": [
															{
																"fileName": "connection/queryModels.ts",
																"line": 347,
																"character": 25
															}
														]
													}
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												237
											]
										}
									],
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 332,
											"character": 12
										}
									]
								}
							}
						},
						{
							"id": 230,
							"name": "customeANDQuery",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The custom query you would like to fire, which Klevu automatically\nconverts into an appropriate query to be included with the request. Use a\n- character before the parenthesis to exclude records matching the\ncontained condition.",
								"text": "This is advanced usage of our API and you may need some help with\nbuilding these queries, so when you need support please reach out to us\nvia the Community Forum.\n"
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 295,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 226,
							"name": "excludeIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Use this field to exclude certain records from the search results. You\ncan specify a record id to control this at variant level, or an\nitemGroupId to control this at compound level."
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 283,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 227,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 228,
												"name": "key",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "connection/queryModels.ts",
														"line": 283,
														"character": 23
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 229,
												"name": "value",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "connection/queryModels.ts",
														"line": 283,
														"character": 36
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													228,
													229
												]
											}
										],
										"sources": [
											{
												"fileName": "connection/queryModels.ts",
												"line": 283,
												"character": 21
											}
										]
									}
								}
							}
						},
						{
							"id": 216,
							"name": "fallbackQueryId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The ID of another query which should be fired if the current query yields\ntoo few results."
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 252,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 217,
							"name": "fallbackWhenCountLessThan",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Use this parameter to specify the criteria for when a fallback query will\nbe fired. For example, if you would like a fallback query to fire when\nyou have two results or less, specify a value of '3'."
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 259,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 210,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 211,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 61,
									"name": "KlevuRecordFields"
								}
							}
						},
						{
							"id": 208,
							"name": "groupBy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The groupBy parameter takes the name of a field indexed in the Klevu\nSearch backend and ensures that there is only one record for each unique\nvalue of this field in the search results.",
								"text": "By default, the groupBy operation is performed on the itemGroupId field.\nWhen querying for KLEVU_CATEGORY or KLEVU_CMS records, it is recommended\nto use name as the groupBy parameter value.\n"
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 196,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "id"
									},
									{
										"type": "literal",
										"value": "name"
									}
								]
							}
						},
						{
							"id": 222,
							"name": "includeIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify any records which should be included with the results, even if\nthe Klevu search query did not match them. You can specify a record id to\ncontrol this at variant level, or a itemGroupId to control this at\ncompound item level."
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 276,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 223,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 224,
												"name": "key",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "connection/queryModels.ts",
														"line": 276,
														"character": 23
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 225,
												"name": "value",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "connection/queryModels.ts",
														"line": 276,
														"character": 36
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													224,
													225
												]
											}
										],
										"sources": [
											{
												"fileName": "connection/queryModels.ts",
												"line": 276,
												"character": 21
											}
										]
									}
								}
							}
						},
						{
							"id": 212,
							"name": "limit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify the number of record you would like to display per page."
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 223,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 213,
							"name": "offset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify the index at which to start counting the number of results from.",
								"text": "The index of the first record in a result set is 0. Thus, if you want to\nstart from the 6th result, use an offset of 5.\n"
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 231,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 231,
							"name": "personalisation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "When a customer enters a physical shop, they may express their\npreferences to an in-store assistant by highlighting the colours they\nlike, the brands they prefer and what they have purchased before.",
								"text": "The in-store assistant would then use this information to show the\ncustomer products they are most likely interested in first, before\nshowing them any others that still may be suitable.\n\nKlevu A.I. is your online assistant.\n\nThis personalisation can be provided in two ways:\n\nincluding some information about the customer's browsing history with\neach request defining your own boosting rules based on information you\nalready know about the customer You can read more about how this works in\nour [Personalisation Guide](https://help.klevu.com/support/solutions/articles/5000871361-do-you-offer-apis-for-personalisation-).\n"
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 315,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 232,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 233,
											"name": "enablePersonalisation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "This must be set to 'true' for enabling personalisation on a particular\nrequest. If set to 'false', the recent objects within the context\nobject will be ignored"
											},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 321,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 234,
											"name": "fields",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This is an optional field. By default, Klevu will analyse all\nattributes of the records the customer has interacted with, in order to\ndetermine the common patterns. If you prefer to focus on particular\naspects, for example brand or price, specify those attributes within\nthis object."
											},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 329,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 61,
													"name": "KlevuRecordFields"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												233,
												234
											]
										}
									],
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 315,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 207,
							"name": "query",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 186,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 201,
								"name": "KlevuBaseQuerySettingsQuery"
							}
						},
						{
							"id": 215,
							"name": "searchPrefs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "There are a number of preferences available for fine-tuning your queries.\n For example you can control whether or not to allow fuzzy search for\n spelling mistakes on a query by query basis. The available searchPrefs\n are detailed below."
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 246,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 178,
									"name": "KlevuSearchPreference"
								}
							}
						},
						{
							"id": 211,
							"name": "sort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The default sorting of results is RELEVANCE, which uses Klevu A.I. to\ndetermine the order. There are various other options available which you\ncan provide to your customers as required."
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 218,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 168,
								"name": "KlevuSorting"
							}
						},
						{
							"id": 218,
							"name": "topIds",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify any records which should always be displayed at the top of the\nresult set. You can specify a record id to control this at variant level,\nor a itemGroupId to control this at compound item level.",
								"text": "Note that this is only applicable when the sort order is by 'RELEVANCE'.\n"
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 268,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 219,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 220,
												"name": "key",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "connection/queryModels.ts",
														"line": 268,
														"character": 19
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 221,
												"name": "value",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "connection/queryModels.ts",
														"line": 268,
														"character": 32
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													220,
													221
												]
											}
										],
										"sources": [
											{
												"fileName": "connection/queryModels.ts",
												"line": 268,
												"character": 17
											}
										]
									}
								}
							}
						},
						{
							"id": 209,
							"name": "typeOfRecords",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "In addition to Products, Categories and CMS Pages, Klevu APIv2 allows you\nto search for custom entities.",
								"text": "For example if you want to display results for recipes, articles or\nphysical stores within your search you can do so by utilising the\ntypeOfRecords parameter.\n"
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 206,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 12,
									"name": "KlevuTypeOfRecord"
								}
							}
						},
						{
							"id": 214,
							"name": "typeOfSearch",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The typeOfSearch parameter defines the behaviour when identifying matches\n for a searched term. For example, whether all or just one of the entered\n words must be matched, whether to allow spelling mistakes, etc."
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 238,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 71,
								"name": "KlevuTypeOfSearch"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								235,
								230,
								226,
								216,
								217,
								210,
								208,
								222,
								212,
								213,
								231,
								207,
								215,
								211,
								218,
								209,
								214
							]
						}
					],
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 185,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 201,
			"name": "KlevuBaseQuerySettingsQuery",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 169,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 202,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 204,
							"name": "categoryPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify the name of the category to retrieve results from, in the same case and format as it is indexed with Klevu.",
								"text": "For nested categories, use the ; character to separate the hierarchy. For example, for 'Mens > Shoes > Trainers and Sneakers' you would specify: Mens;Shoes;Trainers and Sneakers.\n"
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 182,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 203,
							"name": "term",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "This is the phrase to be searched. It can be any free text up-to 128\ncharacters long. If a longer string is provided it is automatically\ntruncated after the first 128 characters."
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 175,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								204,
								203
							]
						}
					],
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 169,
							"character": 42
						}
					]
				}
			}
		},
		{
			"id": 534,
			"name": "KlevuLastSearch",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "store/lastSearches.ts",
					"line": 4,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 535,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 537,
							"name": "term",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "store/lastSearches.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 536,
							"name": "timestamp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "store/lastSearches.ts",
									"line": 5,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								537,
								536
							]
						}
					],
					"sources": [
						{
							"fileName": "store/lastSearches.ts",
							"line": 4,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 271,
			"name": "KlevuListFilter",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 464,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 272,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 273,
							"name": "filtersToReturn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 465,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 274,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 275,
											"name": "enabled",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"comment": {
												"shortText": "Whether or not to return any filters with this query. This defaults to\n false so no filters are returned unless requested."
											},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 470,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 277,
											"name": "exclude",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This is the list of filter keys that you do not want Klevu Search to\ninclude in the response. If a filter is specified in both include and\nexclude lists, include will take precedence."
											},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 482,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 276,
											"name": "include",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "This is the list of filter keys that you would like to retrieve as\nfilters. A filter may also not be returned if there aren't enough\napplicable records in the result set."
											},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 476,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 278,
											"name": "options",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 483,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 279,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 281,
															"name": "limit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": "Specify the maximum number of options to be included per filter."
															},
															"sources": [
																{
																	"fileName": "connection/queryModels.ts",
																	"line": 493,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 282,
															"name": "mincount",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"shortText": " If the parameter minCount is present with a positive number, only\nthe options with an option count equal to or higher than the minCount\nare included."
															},
															"sources": [
																{
																	"fileName": "connection/queryModels.ts",
																	"line": 499,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 280,
															"name": "order",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"comment": {
																"shortText": "A value of 'FREQ' will sort options based on the number of records\neach option has in the result set. 'INDEX' will sort the options\nalphabetically."
															},
															"sources": [
																{
																	"fileName": "connection/queryModels.ts",
																	"line": 489,
																	"character": 6
																}
															],
															"type": {
																"type": "reference",
																"id": 165,
																"name": "FilterOrder"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																281,
																282,
																280
															]
														}
													],
													"sources": [
														{
															"fileName": "connection/queryModels.ts",
															"line": 483,
															"character": 13
														}
													]
												}
											}
										},
										{
											"id": 283,
											"name": "rangeFilterSettings",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"shortText": "When minMax is false, this setting allows you to retrieve range filters\nfor use with numeric values such as price, so you can display bands of\n0-99, 100-199, etc. or a price slider.",
												"text": "By default all attributes submitted to Klevu are indexed as STRING\nattributes, which means they cannot be used as range filters. The\nproduct sale price field is the only exception to this rule, which is\nfiltered using the key klevu_price. If you have explicitly requested\nand Klevu has approved that certain attributes be indexed as numerical\nattributes, you can also retrieve those as range filters.\n"
											},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 513,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 266,
													"name": "RangeFilterSettings"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												275,
												277,
												276,
												278,
												283
											]
										}
									],
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 465,
											"character": 20
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								273
							]
						}
					],
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 464,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 351,
			"name": "KlevuPayload",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 601,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 352,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 353,
							"name": "context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 602,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 354,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 355,
											"name": "apiKeys",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 603,
													"character": 4
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												355
											]
										}
									],
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 602,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 356,
							"name": "recordQueries",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 605,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 350,
									"name": "AllRecordQueries"
								}
							}
						},
						{
							"id": 357,
							"name": "suggestions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 606,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 343,
									"name": "KlevuSuggestionQuery"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								353,
								356,
								357
							]
						}
					],
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 601,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 16,
			"name": "KlevuRecord",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "model.ts",
					"line": 7,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 18,
							"name": "brand",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The brand of the product, eg. 'Nike'."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 11,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 19,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "A double semicolon ;; separated list of the most specific categories, not including their full path. For example if a record was in 'Mens > Shoes' and 'Mens > Tees', the value would be Shoes;;Tees."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20,
							"name": "currency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The currency code applicable to the price values being displayed."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 19,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21,
							"name": "deliveryInfo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 22,
							"name": "discount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 21,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23,
							"name": "freeShipping",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 22,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 24,
							"name": "groupPrices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "This field is not always populated and is mostly used in older integrations. It includes the prices of your record in format groupId:price so you can use your own frontend logic to display prices in realtime. If you are using the B2B group price search parameters described in this documentation, the price and salePrice are automatically calculated so there is no need to use this field in most cases."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 26,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 25,
							"name": "hideAddToCart",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 27,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 26,
							"name": "hideGroupPrices",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The unique identifier of the record within Klevu."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28,
							"name": "image",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The fully qualified URL to the main image of your record."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29,
							"name": "imageHover",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The fully qualified URL to the secondary image of your record."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30,
							"name": "imageUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The fully qualified URL to the main image of your record."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 44,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31,
							"name": "inStock",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Whether or not your record is in stock, 'yes' or 'no'."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 48,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32,
							"name": "itemGroupId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The identifier used to group compound products together, eg. the ID of the parent in the case of a configurable product."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 52,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35,
							"name": "klevu_bulk_boosting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": " Any manual score assigned by the manual boosting rules. This value must be either explicitly requested in fields or using Search Preference enableScores."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33,
							"name": "klevu_category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "This is mostly for internal purposes, but includes the categorisation of the record within Klevu. For example KLEVU_PRODUCT;;Shop All;;Bath;;;groupid_1 @ku@kuCategory@ku@."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34,
							"name": "klevu_manual_boosting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Any manual score assigned by the merchant. This value must be either explicitly requested in fields or using Search Preference enableScores."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 36,
							"name": "klevu_selflearning_boosting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": " The machine learning score assigned by the Klevu Search engine. This value must be either explicitly requested in fields or using Search Preference enableScores."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 71,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 37,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The name of your record, eg. the product name or category title."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38,
							"name": "price",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The original price of your product, before any discounts. This can be used as 'was price' when used in conjunction with salePrice."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 79,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39,
							"name": "rating",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The rating of your product, between 0 and 5."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 83,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 40,
							"name": "salePrice",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The actual selling price of your product, or 'now' price when used in conjunction with price. Note that when using filters, the sale price is represented by klevu_price."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 87,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 43,
							"name": "score",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The score the record has achieved, ie. how relevant it is, which is used for sorting by relevance. This value must be either explicitly requested in fields or using Search Preference enableScores."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 99,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 41,
							"name": "shortDesc",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The short description of your record."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 91,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 42,
							"name": "sku",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The Stock Keeping Unit of the record."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 95,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 44,
							"name": "startPrice",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The salePrice of the lowest variant within all those indexed with the same itemGroupId. This can be used if you would like to show 'as low as' price."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 103,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 45,
							"name": "storeBaseCurrency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 104,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 54,
							"name": "swatches",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If your indexed data includes variants with swatch information, this will be provided here as a nested object with the following elements"
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 132,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 55,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 57,
												"name": "color",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"comment": {
													"shortText": " The label to be displayed for the swatch, eg. Red"
												},
												"sources": [
													{
														"fileName": "model.ts",
														"line": 140,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 56,
												"name": "id",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"comment": {
													"shortText": "The Klevu record ID of the variant the swatch represents."
												},
												"sources": [
													{
														"fileName": "model.ts",
														"line": 136,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 59,
												"name": "image",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"comment": {
													"shortText": "The image of the product which corresponds to this swatch, eg. a picture of the tshirt in red."
												},
												"sources": [
													{
														"fileName": "model.ts",
														"line": 148,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 60,
												"name": "numberOfAdditionalVariants",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"comment": {
													"shortText": " If there are additional variants which have not been included, the number will be included here, so you can display something like \"Also available in 4 other colours\""
												},
												"sources": [
													{
														"fileName": "model.ts",
														"line": 152,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 58,
												"name": "swatchImage",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"comment": {
													"shortText": "The hex colour or image URL to be displayed as the swatch pattern, eg. #FF0000"
												},
												"sources": [
													{
														"fileName": "model.ts",
														"line": 144,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													57,
													56,
													59,
													60,
													58
												]
											}
										],
										"sources": [
											{
												"fileName": "model.ts",
												"line": 132,
												"character": 19
											}
										]
									}
								}
							}
						},
						{
							"id": 46,
							"name": "swatchesInfo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 105,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 47,
							"name": "tags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Any tags or keywords Klevu has saved for the record."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 109,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 48,
							"name": "toPrice",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The salePrice of the highest variant within all those indexed with the same itemGroupId. This can be used if you would like to show 'from X to Y' price range."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 113,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 49,
							"name": "totalVariants",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": " How many additional variants are available for this product. For example when searching for 'small tshirt', if a product has 3 colours available in small then the value here will be 2. If the search was 'tshirt' then the same record would return a value of 8 if there are 3 colours and 3 sizes of each available."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 117,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 50,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 118,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 51,
							"name": "typeOfRecord",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The type of record, e.g. KLEVU_PRODUCT, KLEVU_CMS, KLEVU_CATEGORY, etc."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 122,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 12,
								"name": "KlevuTypeOfRecord"
							}
						},
						{
							"id": 52,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The fully qualified URL used to access the record in your store."
							},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 126,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 53,
							"name": "weight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "model.ts",
									"line": 127,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								18,
								19,
								20,
								21,
								22,
								23,
								24,
								25,
								26,
								27,
								28,
								29,
								30,
								31,
								32,
								35,
								33,
								34,
								36,
								37,
								38,
								39,
								40,
								43,
								41,
								42,
								44,
								45,
								54,
								46,
								47,
								48,
								49,
								50,
								51,
								52,
								53
							]
						}
					],
					"sources": [
						{
							"fileName": "model.ts",
							"line": 7,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 61,
			"name": "KlevuRecordFields",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "model.ts",
					"line": 161,
					"character": 12
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "reference",
					"id": 16,
					"name": "KlevuRecord"
				}
			}
		},
		{
			"id": 388,
			"name": "KlevuResponse",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 719,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 389,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 390,
							"name": "apiResponse",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 720,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 380,
										"name": "KlevuApiResponse"
									}
								]
							}
						},
						{
							"id": 397,
							"name": "next",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 723,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 398,
									"name": "next",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 399,
											"name": "override",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 400,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 402,
															"name": "filterManager",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "connection/queryModels.ts",
																	"line": 725,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"id": 547,
																"name": "FilterManager"
															}
														},
														{
															"id": 401,
															"name": "limit",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "connection/queryModels.ts",
																	"line": 724,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																402,
																401
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 388,
												"name": "KlevuResponse"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 394,
							"name": "queriesById",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 722,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 395,
									"name": "queriesById",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 396,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "QueryResult"
											}
										]
									}
								}
							]
						},
						{
							"id": 391,
							"name": "suggestionsById",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 721,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 392,
									"name": "suggestionsById",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 393,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"id": 358,
												"name": "SuggestionResult"
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								390
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								397,
								394,
								391
							]
						}
					],
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 719,
							"character": 28
						}
					]
				}
			}
		},
		{
			"id": 295,
			"name": "KlevuSimilarProcutsQuery",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 540,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 243,
						"name": "KlevuBaseQuery"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 296,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 298,
									"name": "settings",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 542,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 299,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 300,
													"name": "context",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "connection/queryModels.ts",
															"line": 543,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 301,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 302,
																	"name": "recentObjects",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "connection/queryModels.ts",
																			"line": 544,
																			"character": 6
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 303,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 305,
																						"name": "records",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "connection/queryModels.ts",
																								"line": 546,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "reflection",
																								"declaration": {
																									"id": 306,
																									"name": "__type",
																									"kind": 65536,
																									"kindString": "Type literal",
																									"flags": {},
																									"children": [
																										{
																											"id": 307,
																											"name": "id",
																											"kind": 1024,
																											"kindString": "Property",
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "connection/queryModels.ts",
																													"line": 546,
																													"character": 25
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"kind": 1024,
																											"children": [
																												307
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "connection/queryModels.ts",
																											"line": 546,
																											"character": 23
																										}
																									]
																								}
																							}
																						}
																					},
																					{
																						"id": 304,
																						"name": "typeOfRecord",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "connection/queryModels.ts",
																								"line": 545,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"id": 12,
																							"name": "KlevuTypeOfRecord"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							305,
																							304
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "connection/queryModels.ts",
																						"line": 544,
																						"character": 27
																					}
																				]
																			}
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		302
																	]
																}
															],
															"sources": [
																{
																	"fileName": "connection/queryModels.ts",
																	"line": 543,
																	"character": 13
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														300
													]
												}
											],
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 542,
													"character": 12
												}
											]
										}
									}
								},
								{
									"id": 297,
									"name": "typeOfRequest",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 541,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"id": 67,
										"name": "KlevuTypeOfRequest.SimilarProducts"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										298,
										297
									]
								}
							],
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 540,
									"character": 56
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 343,
			"name": "KlevuSuggestionQuery",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 587,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 243,
						"name": "KlevuBaseQuery"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 344,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 349,
									"name": "hlEndElem",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 592,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 348,
									"name": "hlStartElem",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 591,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 347,
									"name": "limit",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 590,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 346,
									"name": "query",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 589,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 345,
									"name": "typeOfRequest",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 588,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"id": 64,
										"name": "KlevuTypeOfRequest.Suggestion"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										349,
										348,
										347,
										346,
										345
									]
								}
							],
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 587,
									"character": 52
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 308,
			"name": "KlevuTrendingProductsQuery",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 552,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 243,
						"name": "KlevuBaseQuery"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 309,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 311,
									"name": "settings",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 554,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 312,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 316,
													"name": "context",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "connection/queryModels.ts",
															"line": 558,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 317,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 318,
																	"name": "recentObjects",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "connection/queryModels.ts",
																			"line": 559,
																			"character": 6
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 319,
																				"name": "__type",
																				"kind": 65536,
																				"kindString": "Type literal",
																				"flags": {},
																				"children": [
																					{
																						"id": 321,
																						"name": "records",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "connection/queryModels.ts",
																								"line": 561,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "reflection",
																								"declaration": {
																									"id": 322,
																									"name": "__type",
																									"kind": 65536,
																									"kindString": "Type literal",
																									"flags": {},
																									"children": [
																										{
																											"id": 323,
																											"name": "id",
																											"kind": 1024,
																											"kindString": "Property",
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "connection/queryModels.ts",
																													"line": 561,
																													"character": 25
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"kind": 1024,
																											"children": [
																												323
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "connection/queryModels.ts",
																											"line": 561,
																											"character": 23
																										}
																									]
																								}
																							}
																						}
																					},
																					{
																						"id": 320,
																						"name": "typeOfRecord",
																						"kind": 1024,
																						"kindString": "Property",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "connection/queryModels.ts",
																								"line": 560,
																								"character": 8
																							}
																						],
																						"type": {
																							"type": "reference",
																							"id": 12,
																							"name": "KlevuTypeOfRecord"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"kind": 1024,
																						"children": [
																							321,
																							320
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "connection/queryModels.ts",
																						"line": 559,
																						"character": 27
																					}
																				]
																			}
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		318
																	]
																}
															],
															"sources": [
																{
																	"fileName": "connection/queryModels.ts",
																	"line": 558,
																	"character": 14
																}
															]
														}
													}
												},
												{
													"id": 313,
													"name": "personalisation",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "connection/queryModels.ts",
															"line": 555,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 314,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 315,
																	"name": "enablePersonalisation",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "connection/queryModels.ts",
																			"line": 556,
																			"character": 6
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		315
																	]
																}
															],
															"sources": [
																{
																	"fileName": "connection/queryModels.ts",
																	"line": 555,
																	"character": 22
																}
															]
														}
													}
												},
												{
													"id": 324,
													"name": "query",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "connection/queryModels.ts",
															"line": 564,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 325,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 326,
																	"name": "categoryPath",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "connection/queryModels.ts",
																			"line": 565,
																			"character": 6
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		326
																	]
																}
															],
															"sources": [
																{
																	"fileName": "connection/queryModels.ts",
																	"line": 564,
																	"character": 12
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														316,
														313,
														324
													]
												}
											],
											"sources": [
												{
													"fileName": "connection/queryModels.ts",
													"line": 554,
													"character": 13
												}
											]
										}
									}
								},
								{
									"id": 310,
									"name": "typeOfRequest",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "connection/queryModels.ts",
											"line": 553,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"id": 68,
										"name": "KlevuTypeOfRequest.Trending"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										311,
										310
									]
								}
							],
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 552,
									"character": 58
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 266,
			"name": "RangeFilterSettings",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 446,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 267,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 268,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "This is the identifier of your numerical attribute, eg. 'klevu_price'."
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 450,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 269,
							"name": "minMax",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "If set to true, the Klevu Search engine calculates the minimum and maximum\nvalues for this filter for use with a slider."
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 455,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 270,
							"name": "rangeInterval",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If a positive value is provided, the Klevu Search engine will calculate\nranges for this value. For example a value of 100 would give ranges from 0\nto 99, 100 to 299, etc."
							},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 461,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								268,
								269,
								270
							]
						}
					],
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 446,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 425,
			"name": "SearchOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Search options to modify the search query."
			},
			"sources": [
				{
					"fileName": "queries/search/search.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "KlevuDefaultOptions"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 426,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 428,
									"name": "doNotSendEvent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "queries/search/search.ts",
											"line": 19,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 427,
									"name": "typeOfRecords",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"shortText": "The type of records to search for."
									},
									"sources": [
										{
											"fileName": "queries/search/search.ts",
											"line": 18,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 12,
											"name": "KlevuTypeOfRecord"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										428,
										427
									]
								}
							],
							"sources": [
								{
									"fileName": "queries/search/search.ts",
									"line": 14,
									"character": 50
								}
							]
						}
					},
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 205,
								"name": "KlevuBaseQuerySettings"
							},
							{
								"type": "literal",
								"value": "query"
							}
						],
						"qualifiedName": "Omit",
						"package": "typescript",
						"name": "Omit"
					}
				]
			}
		},
		{
			"id": 358,
			"name": "SuggestionResult",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 609,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 359,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 360,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 610,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 361,
							"name": "suggestions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "connection/queryModels.ts",
									"line": 611,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 362,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 363,
												"name": "suggest",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "connection/queryModels.ts",
														"line": 612,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													363
												]
											}
										],
										"sources": [
											{
												"fileName": "connection/queryModels.ts",
												"line": 611,
												"character": 21
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								360,
								361
							]
						}
					],
					"sources": [
						{
							"fileName": "connection/queryModels.ts",
							"line": 609,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 538,
			"name": "KlevuLastSearches",
			"kind": 32,
			"kindString": "Variable",
			"flags": {},
			"sources": [
				{
					"fileName": "store/lastSearches.ts",
					"line": 17,
					"character": 13
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 539,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 544,
							"name": "get",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 545,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 546,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 534,
													"name": "KlevuLastSearch"
												}
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 540,
							"name": "save",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 541,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 542,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 543,
													"name": "term",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								544,
								540
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 79,
			"name": "KlevuFetch",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/connection.ts",
					"line": 19,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 80,
					"name": "KlevuFetch",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 81,
							"name": "functions",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "KlevuFetchFunction"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 388,
								"name": "KlevuResponse"
							}
						],
						"qualifiedName": "Promise",
						"package": "typescript",
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 82,
			"name": "KlevuKMCSettings",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/kmc.ts",
					"line": 6,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 83,
					"name": "KlevuKMCSettings",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 84,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 86,
											"name": "banner",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BannerRootObject"
											},
											"defaultValue": "..."
										},
										{
											"id": 87,
											"name": "maps",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "MapsRootObject"
											},
											"defaultValue": "..."
										},
										{
											"id": 85,
											"name": "root",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RootObject"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												86,
												87,
												85
											]
										}
									]
								}
							}
						],
						"qualifiedName": "Promise",
						"package": "typescript",
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 471,
			"name": "applyFilterWithManager",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "modifiers/applyFilterWithManager/applyFilterWithManager.ts",
					"line": 12,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 472,
					"name": "applyFilterWithManager",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Apply filters to query based on Filter Manager",
						"returns": "\n"
					},
					"parameters": [
						{
							"id": 473,
							"name": "manager",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {},
							"type": {
								"type": "reference",
								"id": 547,
								"name": "FilterManager"
							}
						},
						{
							"id": 474,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 462,
										"name": "ApplyFilterOptions"
									}
								],
								"qualifiedName": "Partial",
								"package": "typescript",
								"name": "Partial"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchModifer"
					}
				}
			]
		},
		{
			"id": 458,
			"name": "applyFilters",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "modifiers/applyFilter/applyFilter.ts",
					"line": 24,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 459,
					"name": "applyFilters",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"returns": "\n"
					},
					"parameters": [
						{
							"id": 460,
							"name": "filters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 464,
									"name": "ApplyFilter"
								}
							}
						},
						{
							"id": 461,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 462,
										"name": "ApplyFilterOptions"
									}
								],
								"qualifiedName": "Partial",
								"package": "typescript",
								"name": "Partial"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchModifer"
					}
				}
			]
		},
		{
			"id": 500,
			"name": "boostWithFilterManager",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "modifiers/boostWithFilterManager/boostWithFilterManager.ts",
					"line": 13,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 501,
					"name": "boostWithFilterManager",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Boost query with currect selection of filter manager",
						"returns": "KlevuModifier that be used to modify query\n"
					},
					"parameters": [
						{
							"id": 502,
							"name": "manager",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Instance of filter manager to use for selection of current values"
							},
							"type": {
								"type": "reference",
								"id": 547,
								"name": "FilterManager"
							}
						},
						{
							"id": 503,
							"name": "weights",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Tell the weight of each filter"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 504,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 505,
												"name": "key",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "modifiers/boostWithFilterManager/boostWithFilterManager.ts",
														"line": 16,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 506,
												"name": "weight",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "modifiers/boostWithFilterManager/boostWithFilterManager.ts",
														"line": 17,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													505,
													506
												]
											}
										]
									}
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchModifer"
					}
				}
			]
		},
		{
			"id": 493,
			"name": "boostWithFilters",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "modifiers/boostWithFilters/boostWithFilters.ts",
					"line": 10,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 494,
					"name": "boostWithFilters",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Boost products based on a filters",
						"returns": "\n"
					},
					"parameters": [
						{
							"id": 495,
							"name": "boosts",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 496,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 497,
												"name": "key",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "modifiers/boostWithFilters/boostWithFilters.ts",
														"line": 12,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 498,
												"name": "values",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "modifiers/boostWithFilters/boostWithFilters.ts",
														"line": 13,
														"character": 4
													}
												],
												"type": {
													"type": "array",
													"elementType": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											},
											{
												"id": 499,
												"name": "weight",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "modifiers/boostWithFilters/boostWithFilters.ts",
														"line": 14,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													497,
													498,
													499
												]
											}
										]
									}
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchModifer"
					}
				}
			]
		},
		{
			"id": 481,
			"name": "boostWithKeywords",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "modifiers/boostWithKeywords/boostWithKeywords.ts",
					"line": 10,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 482,
					"name": "boostWithKeywords",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Boost or deboost query based on a keywords.",
						"returns": "KlevuModifier that be used to modify query\n"
					},
					"parameters": [
						{
							"id": 483,
							"name": "keywords",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Keywords to boost and deboost"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 484,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 485,
												"name": "phrase",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"comment": {
													"shortText": "phrase to boost or debost"
												},
												"sources": [
													{
														"fileName": "modifiers/boostWithKeywords/boostWithKeywords.ts",
														"line": 15,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 486,
												"name": "weight",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"comment": {
													"shortText": "The boosting value to be applied, a decimal between 0 - 999. Please\nspecify values above 1 for boosting the records up the rankings, and a\nvalue of 0 to 1 to de-boost records down the rankings."
												},
												"sources": [
													{
														"fileName": "modifiers/boostWithKeywords/boostWithKeywords.ts",
														"line": 21,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													485,
													486
												]
											}
										]
									}
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchModifer"
					}
				}
			]
		},
		{
			"id": 487,
			"name": "boostWithRecords",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "modifiers/boostWithRecords/boostWithRecords.ts",
					"line": 10,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 488,
					"name": "boostWithRecords",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Boost or deboost query based on a record ids.",
						"returns": "KlevuModifier that be used to modify query\n"
					},
					"parameters": [
						{
							"id": 489,
							"name": "records",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Keywords to boost and deboost"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 490,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 491,
												"name": "id",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"comment": {
													"shortText": "Record id"
												},
												"sources": [
													{
														"fileName": "modifiers/boostWithRecords/boostWithRecords.ts",
														"line": 15,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 492,
												"name": "weight",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"comment": {
													"shortText": "The boosting value to be applied, a decimal between 0 - 999. Please\nspecify values above 1 for boosting the records up the rankings, and a\nvalue of 0 to 1 to de-boost records down the rankings."
												},
												"sources": [
													{
														"fileName": "modifiers/boostWithRecords/boostWithRecords.ts",
														"line": 21,
														"character": 4
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													491,
													492
												]
											}
										]
									}
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchModifer"
					}
				}
			]
		},
		{
			"id": 410,
			"name": "categoryListing",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "queries/categoryListing/categoryListing.ts",
					"line": 24,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 411,
					"name": "categoryListing",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Fetch products for a category listing page.",
						"returns": "\n"
					},
					"parameters": [
						{
							"id": 412,
							"name": "category",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 413,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Options"
									}
								],
								"qualifiedName": "Partial",
								"package": "typescript",
								"name": "Partial"
							}
						},
						{
							"id": 414,
							"name": "modifiers",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "KlevuFetchModifer"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchFunction"
					}
				}
			]
		},
		{
			"id": 475,
			"name": "fallback",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "modifiers/fallback/fallback.ts",
					"line": 12,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 476,
					"name": "fallback",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "If original query doesn't return enough results then fallback query is run added to results",
						"returns": "\n"
					},
					"parameters": [
						{
							"id": 477,
							"name": "func",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {},
							"type": {
								"type": "reference",
								"name": "KlevuFetchFunction"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchModifer"
					}
				}
			]
		},
		{
			"id": 159,
			"name": "isFilterResultOptions",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 637,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 160,
					"name": "isFilterResultOptions",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 161,
							"name": "filter",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 364,
										"name": "FilterResultOptions"
									},
									{
										"type": "reference",
										"id": 373,
										"name": "FilterResultSlider"
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "filter",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 364,
							"name": "FilterResultOptions"
						}
					}
				}
			]
		},
		{
			"id": 162,
			"name": "isFilterResultSlider",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "connection/queryModels.ts",
					"line": 651,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 163,
					"name": "isFilterResultSlider",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 164,
							"name": "filter",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 364,
										"name": "FilterResultOptions"
									},
									{
										"type": "reference",
										"id": 373,
										"name": "FilterResultSlider"
									}
								]
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "filter",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"id": 373,
							"name": "FilterResultSlider"
						}
					}
				}
			]
		},
		{
			"id": 478,
			"name": "listFilters",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "modifiers/listFilters/listFilters.ts",
					"line": 35,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 479,
					"name": "listFilters",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "List filters that can affect given query",
						"returns": "\n"
					},
					"parameters": [
						{
							"id": 480,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Options"
									}
								],
								"qualifiedName": "Partial",
								"package": "typescript",
								"name": "Partial"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchModifer"
					}
				}
			]
		},
		{
			"id": 415,
			"name": "newArrivals",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "queries/newarrivals/newarrivals.ts",
					"line": 24,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 416,
					"name": "newArrivals",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Get new arrival recommendations",
						"returns": "\n"
					},
					"parameters": [
						{
							"id": 417,
							"name": "category",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 418,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "KlevuDefaultOptions"
									}
								],
								"qualifiedName": "Partial",
								"package": "typescript",
								"name": "Partial"
							}
						},
						{
							"id": 419,
							"name": "modifiers",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"comment": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "KlevuFetchModifer"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchFunction"
					}
				}
			]
		},
		{
			"id": 441,
			"name": "products",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "queries/products/products.ts",
					"line": 11,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 442,
					"name": "products",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Fetches list of products. All fields are fetched.",
						"returns": "\n"
					},
					"parameters": [
						{
							"id": 443,
							"name": "productIds",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchFunction"
					}
				}
			]
		},
		{
			"id": 420,
			"name": "search",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "queries/search/search.ts",
					"line": 38,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 421,
					"name": "search",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Create a basic search to Klevu backend. Id for this query is `search`",
						"returns": "\n"
					},
					"parameters": [
						{
							"id": 422,
							"name": "term",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "Search term from input"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 423,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "{@link SearchOptions}"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 425,
										"name": "SearchOptions"
									}
								],
								"qualifiedName": "Partial",
								"package": "typescript",
								"name": "Partial"
							}
						},
						{
							"id": 424,
							"name": "modifiers",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "KlevuFetchModifer"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchFunction"
					}
				}
			]
		},
		{
			"id": 444,
			"name": "similarProducts",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "queries/similarProducts/similarProducts.ts",
					"line": 20,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 445,
					"name": "similarProducts",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Fetch similiar products based on list of ids",
						"returns": "\n"
					},
					"parameters": [
						{
							"id": 446,
							"name": "products",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 16,
											"name": "KlevuRecord"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "id"
												},
												{
													"type": "literal",
													"value": "itemGroupId"
												}
											]
										}
									],
									"qualifiedName": "Pick",
									"package": "typescript",
									"name": "Pick"
								}
							}
						},
						{
							"id": 447,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Options"
									}
								],
								"qualifiedName": "Partial",
								"package": "typescript",
								"name": "Partial"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchFunction"
					}
				}
			]
		},
		{
			"id": 429,
			"name": "suggestions",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "queries/suggestions/suggestions.ts",
					"line": 26,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 430,
					"name": "suggestions",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Return suggestion on given search term",
						"returns": "\n"
					},
					"parameters": [
						{
							"id": 431,
							"name": "term",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "search term"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 432,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Options"
									}
								],
								"qualifiedName": "Partial",
								"package": "typescript",
								"name": "Partial"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchFunction"
					}
				}
			]
		},
		{
			"id": 433,
			"name": "trending",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "queries/trending/trending.ts",
					"line": 28,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 434,
					"name": "trending",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Return trending recommendations",
						"returns": "\n"
					},
					"parameters": [
						{
							"id": 435,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {},
							"type": {
								"type": "reference",
								"name": "Options"
							}
						},
						{
							"id": 436,
							"name": "modifiers",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"comment": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "KlevuFetchModifer"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchFunction"
					}
				}
			]
		},
		{
			"id": 437,
			"name": "trendingSearch",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "queries/trendingSearch/trendingSearch.ts",
					"line": 21,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 438,
					"name": "trendingSearch",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Create a trending search query. Id for this query is `trendingSearch`",
						"returns": "See {@link KlevuFetchFunction}\n",
						"tags": [
							{
								"tag": "example",
								"text": "Simple example\n```\nconst result = await KlevuFetch(\n trendingSearch()\n)\n\nconsole.log(result.getQueries(\"trendingSearch\").records)\n```\n"
							}
						]
					},
					"parameters": [
						{
							"id": 439,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "{@link search}"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 425,
										"name": "SearchOptions"
									}
								],
								"qualifiedName": "Partial",
								"package": "typescript",
								"name": "Partial"
							}
						},
						{
							"id": 440,
							"name": "modifiers",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "KlevuFetchModifer"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "KlevuFetchFunction"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"kind": 8,
			"children": [
				165,
				531,
				178,
				168,
				12,
				62,
				71
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				547,
				1,
				507
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				350,
				464,
				462,
				364,
				373,
				340,
				327,
				380,
				284,
				243,
				205,
				201,
				534,
				271,
				351,
				16,
				61,
				388,
				295,
				343,
				308,
				266,
				425,
				358
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				538
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				79,
				82,
				471,
				458,
				500,
				493,
				481,
				487,
				410,
				475,
				159,
				162,
				478,
				415,
				441,
				420,
				444,
				429,
				433,
				437
			],
			"categories": [
				{
					"title": "Modifiers",
					"children": [
						471,
						458,
						500,
						493,
						481,
						487,
						475,
						478
					]
				},
				{
					"title": "Other",
					"children": [
						79,
						82,
						159,
						162
					]
				},
				{
					"title": "Queries",
					"children": [
						410,
						441,
						420,
						429,
						437
					]
				},
				{
					"title": "RecommendationQuery",
					"children": [
						415,
						444,
						433
					]
				}
			]
		}
	],
	"sources": [
		{
			"fileName": "index.ts",
			"line": 1,
			"character": 0
		}
	]
}